<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>Yagasoft.Libraries.EnhancedOrgService.NetCore</PackageId>
    <Title>Power Platform Enhanced Service Client</Title>
    <Version>1.4.14</Version>
    <Authors>ahmed-elsawalhy;Yagasoft</Authors>
    <Company>Yagasoft</Company>
    <Owners>Yagasoft</Owners>
    <Description>Dynamics CRM Enhanced Organisation Service is an extension to the out-of-the-box IOrganizationService.
It supports pooling, transactions, deferred execution, caching, load balancing, and auto retry.</Description>
    <Copyright>Copyright Ahmed Elsawalhy (Yagasoft.com)</Copyright>
    <Tags>organization;service;IOrganizationService;CrmServiceClient;ServiceClient;CRM;Dynamics;365;performance;transaction;pool;bulk;cache;caching;load;balancing;deferred;retry;auto;netcore;net6.0</Tags>
    <SignAssembly>True</SignAssembly>
    <AssemblyOriginatorKeyFile>key.snk</AssemblyOriginatorKeyFile>
    <Product>Power Platform Enhanced Service Client</Product>
    <PackageProjectUrl>https://github.com/yagasoft/DynamicsCrm-Libraries</PackageProjectUrl>
    <RepositoryUrl>https://github.com/yagasoft/DynamicsCrm-Libraries.git</RepositoryUrl>
    <PackageTags>organization;service;IOrganizationService;CrmServiceClient;ServiceClient;CRM;Dynamics;365;performance;transaction;pool;bulk;cache;caching;load;balancing;deferred;retry;auto;netcore;net6.0</PackageTags>
    <PackageReleaseNotes>      * 1.4.14
      Fixed: race condition.
      * 1.4.4
      Improved: refactored and improved performance.
      * 1.2.1
      Added: async methods
      Fixed: issues
      * 1.1.1
      Added: support for .NET 6.0
      * 6.2.5
      Fixed: RetrieveMultiple error
      * 6.2.2
      Fixed: service pool not respecting pool limit
      * 6.2.1
      Changed: operations history is disabled by default
      * 6.1.8
      Fixed: random null error
      * 6.1.7
      Fixed: ExecuteMultiple not returning a response when requested
      * 6.1.6
      Added: RetrieveMultiple FetchXML convenience method
      Fixed: race condition
      * 6.1.4
      Improved: refactor
      * 6.1.3
      Fixed: NuGet package requirements
      * 6.1.1
      Added: default factory and pool implementations for easier connection kick off
      Improved: reworked the implicit pooling implementation for easier usage and more powerful features
      Improved: reworked the self-balancing implementation for better code and maintenance
      Improved: made the routing service more generic
      Improved: reworked the interfaces to make more sense and for better maintenance (it breaks backward compatibility but the library hasn't been downloaded yet)
      Improved: helpers for easier usage
      * 5.3.3
      Added: proper warm up logic for all pooling levels
      Fixed: internal pool initialisation
      Fixed: timeout configuration
      Fixed: disposal state
      * 5.3.2
      Added: option to control service internal pool warm up
      Fixed: RetrieveMultiple helper not respecting the limit given
      Fixed: warm up infinite loop on error
      * 5.2.1
      Added: connection timeout parameter
      * 5.1.4
      Fixed: clear operation events when operation has finished to prevent memory leak
      Fixed: made parameters in generic retrieve optional
      Fixed: memory leaks
      * 5.1.3
      Fixed: state validation for self-enqueuing/balancing service
      Fixed: threading issues
      * 5.1.2
      Added: node load balancer
      Added: self-balancing service
      Added: auto-retry mechanism
      Added: auto-retry failure events
      Added: operation-specific options
      Added: operation status events
      Added: operation statistics on all levels: service, pool, and factory
      Added: operation history to the service
      Added: deferred support for SDK methods (in addition to the custom ones that return a 'token')
      Added: custom cache factory parameter
      Added: exposed AutoSetMaxPerformanceParams through the pool 'helper' class
      Improved: optimised the interfaces and refactored
      Improved: internal calls by switching them to pass through service features
      Changed: tighten the service validity check to avoid internal operations triggering after Dispose; user must wait for all operations to finish
      Fixed: params default values
      Removed: async operations (use Task.Run or similar methods from .NET instead)
      * 4.1.1
      Added: CacheItemPriority to cache settings
      Improved: pool helpers
      Improved: generics and refactored
      Fixed: absolute expiration returns an absolute fixed date in the cache factory, now returns an absolute date from the time of call to the factory's 'get'
      Fixed: connection errors causing deadlocks
      * 3.1.1
      Added: execution planning, where a plan is executed in CRM itself for performance and atomicity reasons
      * 2.5.1
      Added: use CrmServiceClient's Clone method internally for faster pooling of connections if available (SDK limits it for CRM Online only for now)
      Added: DotNet optimisation options
      * 2.1.1
      Changed: moved to a new namespace
      * 1.3.4
      Added: project URL
      * 1.1.1
      Initial release</PackageReleaseNotes>
    <PackageLicenseFile>LICENCE</PackageLicenseFile>
    <PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
    <RunAnalyzersDuringBuild>False</RunAnalyzersDuringBuild>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>


  <ItemGroup>
    <_PackageFiles Include="$(OutputPath)\Microsoft.Xrm.Client.dll">
      <BuildAction>None</BuildAction>
      <PackagePath>lib\net6.0\</PackagePath>
    </_PackageFiles>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.PowerPlatform.Dataverse.Client" Version="1.1.32" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Yagasoft.Libraries.Common.NetCore\Yagasoft.Libraries.Common.NetCore.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.Xrm.Client">
      <HintPath>..\Yagasoft.Libraries.EnhancedOrgService\Libraries\Microsoft.Xrm.Client.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <None Update="LICENCE">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Update="Yagasoft.Libraries.EnhancedOrgService.NetCore.nuspec">
      <SubType>Designer</SubType>
    </None>
  </ItemGroup>

</Project>
